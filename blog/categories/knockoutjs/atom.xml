<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: knockoutjs | Spaghetti Code]]></title>
  <link href="http://thostetler.github.io/blog/categories/knockoutjs/atom.xml" rel="self"/>
  <link href="http://thostetler.github.io/"/>
  <updated>2016-02-12T18:09:14-05:00</updated>
  <id>http://thostetler.github.io/</id>
  <author>
    <name><![CDATA[Tim Hostetler]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OL3 Element Using KnockoutJs]]></title>
    <link href="http://thostetler.github.io/blog/2016/02/07/first-ol3-map/"/>
    <updated>2016-02-07T23:25:10-05:00</updated>
    <id>http://thostetler.github.io/blog/2016/02/07/first-ol3-map</id>
    <content type="html"><![CDATA[<iframe
  width="100%"
  height="300"
  src="//jsfiddle.net/timh06/8030x8ms/embedded/result,js,html/"
  allowfullscreen="allowfullscreen"
  frameborder="0"
></iframe>


<p>If you&rsquo;ve used something like polymer or knockout before, you&rsquo;ve seen HTML5
custom components, they are really cool.  The goal here is to create something
like this in your markup, for this we&rsquo;re going to use Knockout custom
components:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;ol3map&gt;&lt;/ol3map&gt;</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Then use the <code>KnockoutJs</code> simple custom component system to create the OL3
map.  If you haven&rsquo;t done so already, take a look over the custom component
section on <a href="http://knockoutjs.com/documentation%0A/component-overview.html">Knockout Components</a>.  Let&rsquo;s start by creating the component
registration:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">ko</span><span class="p">.</span><span class="nx">components</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">ol3map</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">viewModel</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">createViewModel</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">componentInfo</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nx">MapViewModel</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">componentInfo</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">template</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="c">&lt;!--</span> <span class="o">--&gt;&amp;</span><span class="nx">rsquo</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>We want to then create our new <code>MapViewModel</code> object, this will be the context
that will be bound to the template we provide.  This is important, since OL3
won&rsquo;t initialize on hidden elements, we&rsquo;ll have to do some additional work to
get it to show up.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">MapViewModel</span> <span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ol</span><span class="p">.</span><span class="nx">Map</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">view</span><span class="o">:</span> <span class="k">new</span> <span class="nx">ol</span><span class="p">.</span><span class="nx">View</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">center</span><span class="o">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">zoom</span><span class="o">:</span> <span class="mi">2</span>
</span><span class='line'>    <span class="p">})</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>In the <code>MapViewModel</code> we want to create a new <code>ol.Map</code> object with <em>no</em> target
set yet.  We&rsquo;ll do that in a custom binding handler that will do the job of
connecting the two.</p>

<p>Now let&rsquo;s set up the custom binding handler:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">ko</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">__map</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">init</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">valueAccessor</span><span class="p">,</span> <span class="nx">allBindings</span><span class="p">,</span> <span class="nx">viewModel</span><span class="p">,</span> <span class="nx">bindingContext</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">viewModel</span><span class="p">.</span><span class="nx">map</span><span class="p">.</span><span class="nx">setTarget</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>This binding handler will allow us to do something like
<code>&lt;div data-bind="__map"&gt;&lt;/div&gt;</code> and get back the element and the viewmodel.
Once it&rsquo;s called we know the element exists, so we can attach our map at that
point. Also, prepending with <code>__</code> helps to keep us from possibly overwriting
other handlers.  Finally, let&rsquo;s change our template to include the new
binding.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">ko</span><span class="p">.</span><span class="nx">components</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">ol3map</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">viewModel</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">createViewModel</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">componentInfo</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nx">MapViewModel</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">componentInfo</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">template</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">data</span><span class="o">-</span><span class="nx">bind</span><span class="o">=</span><span class="s2">&quot;__map&quot;</span><span class="o">&gt;&lt;</span><span class="err">/div&gt;&amp;rsquo;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure></p>

<p>That&rsquo;s it! now when we place a <code>&lt;ol3map&gt;&lt;/ol3map&gt;</code> tag somewhere in our page
Knockout will call our viewmodel code, which will create the object containing
that <code>map</code> property.  When the template is applied, it is bound to the new
viewmodel context which should be something like <code>{ map: ol.Map(...) }</code>, then
the <code>__map</code> binding handler is called with this object passed as the
<code>viewmodel</code> param.  Finally, we call <code>setTarget(element)</code> on the map object we
got from the passed in viewmodel and the map gets initialized.  The final code
looks like this:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">ko</span><span class="p">.</span><span class="nx">bindingHandlers</span><span class="p">.</span><span class="nx">__map</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">init</span><span class="o">:</span> <span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">,</span> <span class="nx">valueAccessor</span><span class="p">,</span> <span class="nx">allBindings</span><span class="p">,</span> <span class="nx">viewModel</span><span class="p">,</span> <span class="nx">bindingContext</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">viewModel</span><span class="p">.</span><span class="nx">map</span><span class="p">.</span><span class="nx">setTarget</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">};</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="kd">function</span> <span class="nx">MapViewModel</span> <span class="p">(</span><span class="nx">options</span><span class="p">,</span> <span class="nx">element</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">ol</span><span class="p">.</span><span class="nx">Map</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">view</span><span class="o">:</span> <span class="k">new</span> <span class="nx">ol</span><span class="p">.</span><span class="nx">View</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">center</span><span class="o">:</span> <span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">],</span>
</span><span class='line'>      <span class="nx">zoom</span><span class="o">:</span> <span class="mi">2</span>
</span><span class='line'>    <span class="p">}),</span>
</span><span class='line'>    <span class="nx">layers</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>      <span class="k">new</span> <span class="nx">ol</span><span class="p">.</span><span class="nx">layer</span><span class="p">.</span><span class="nx">Tile</span><span class="p">({</span> <span class="nx">source</span><span class="o">:</span> <span class="k">new</span> <span class="nx">ol</span><span class="p">.</span><span class="nx">source</span><span class="p">.</span><span class="nx">OSM</span><span class="p">()</span> <span class="p">})</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">// Create the custom component</span>
</span><span class='line'><span class="nx">ko</span><span class="p">.</span><span class="nx">components</span><span class="p">.</span><span class="nx">register</span><span class="p">(</span><span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="nx">ol3map</span><span class="o">&amp;</span><span class="nx">rsquo</span><span class="p">;,</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">viewModel</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">createViewModel</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">componentInfo</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nx">MapViewModel</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">componentInfo</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">template</span><span class="o">:</span> <span class="o">&amp;</span><span class="nx">lsquo</span><span class="p">;</span><span class="o">&lt;</span><span class="nx">div</span> <span class="nx">data</span><span class="o">-</span><span class="nx">bind</span><span class="o">=</span><span class="s2">&quot;__map&quot;</span><span class="o">&gt;&lt;</span><span class="err">/div&gt;&amp;rsquo;</span>
</span><span class='line'><span class="p">});</span><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">ko</span><span class="p">.</span><span class="nx">applyBindings</span><span class="p">({});</span>
</span></code></pre></td></tr></table></div></figure></p>
]]></content>
  </entry>
  
</feed>
